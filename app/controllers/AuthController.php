<?php
// TODO:  Should we have this or just use UserController generated by Confide?
class AuthController extends BaseController {

	/**
	* Log the user in
	*/
	public function adminLogin()
	{
		$user = $this->login();

		if ($user) {
			return Redirect::to('/');
		}
	}

	public function apiLogin()
	{
		$user = $this->login();

		if ($user) {
			return($user);
			//return \Hyfn::output($user);
		}
	}

	/**
	* Log the user in
	*/
	private function login() {
		$input = array(
			'email'    => Input::get( 'email' ), // May be the username too
			'username' => Input::get( 'email' ), // so we have to pass both
			'password' => Input::get( 'password' ),
			'remember' => Input::get( 'remember' ),
		);

		// If you wish to only allow login from confirmed users, call logAttempt
		// with the second parameter as true.
		// logAttempt will check if the 'email' perhaps is the username.
		if ( Confide::logAttempt( $input ) )
		{
			// If the session 'loginRedirect' is set, then redirect
			// to that route. Otherwise redirect to '/'
			$r = Session::get('loginRedirect');
			if (!empty($r))
			{
				Session::forget('loginRedirect');
				return Redirect::to($r);
			}

			return Redirect::to('/'); // change it to '/admin', '/dashboard' or something
		}
		else
		{
			$user = new User;

			// Check if there was too many login attempts
			if( Confide::isThrottled( $input ) )
			{
				$err_msg = Lang::get('confide::confide.alerts.too_many_attempts');
			}
			elseif( $user->checkUserExists( $input ) and ! $user->isConfirmed( $input ) )
			{
				$err_msg = Lang::get('confide::confide.alerts.not_confirmed');
			}
			else
			{
				$err_msg = Lang::get('confide::confide.alerts.wrong_credentials');
			}

			return Redirect::action('UserController@login')
				->withInput(Input::except('password'))
				->with( 'error', $err_msg );
		}
	}
}